#!/bin/bash
#
# iptables example configuration script

# Configure iptables path
# iptables example configuration script

# Configure iptables path
IPTABLES=/sbin/iptables
IP6TABLES=/sbin/ip6tables

declare -a arr=("$IPTABLES" "$IP6TABLES")

for iptables in "${arr[@]}"
do
    # Flush all chains
    $iptables --flush
    
    # Allow unlimited traffic on the loopback interface
    $iptables -A INPUT -i lo -j ACCEPT
    $iptables -A OUTPUT -o lo -j ACCEPT
    
    # Set default policies
    $iptables --policy INPUT DROP
    $iptables --policy OUTPUT ACCEPT
    $iptables --policy FORWARD DROP
    
    # Previously initiated and accepted exchanges bypass rule checking
    # Allow unlimited outbound traffic
    $iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    $iptables -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

    #Ratelimit SSH for attack protection
    $iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 60 --hitcount 4 -j DROP
    $iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --set
    $iptables -A INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT
   
#    if [ "$iptables" = "$IP6TABLES" ];
#    then
#        $iptables -I INPUT -p icmpv6 -j ACCEPT
#    else
#        # Nagios
#        $iptables -A INPUT -s 10.121.82.50 -j ACCEPT
#    fi

    # allow protocol port
    allow() {
        $iptables -A INPUT -p $2 --dport $1 -m state --state NEW -j ACCEPT
        $iptables -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    }
    
    drop() {
        $iptables -A INPUT -p $2 --sport $1 -j DROP
    }


    # Allow certain ports to be accessible from the outside
    # Example:
    allow 80 tcp
    allow 443 tcp
    drop 8443 tcp
    
    # Allow pinging of your server
    $iptables -A INPUT -p icmp --icmp-type 8 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

    # Drop all other traffic
#    $iptables -A INPUT -j DROP

    # print the activated rules to the console when script is completed
    $iptables -nL

done

# $IPTABLES -A INPUT -s 10.121.82.50 -j ACCEPT
$IP6TABLES -I INPUT -p icmpv6 -j ACCEPT

# Drop ICMP echo-request messages sent to broadcast or multicast addresses
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Drop source routed packets
echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route
 
# Enable TCP SYN cookie protection from SYN floods
echo 1 > /proc/sys/net/ipv4/tcp_syncookies
 
# Don't accept ICMP redirect messages
echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
 
# Don't send ICMP redirect messages
echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
 
# Enable source address spoofing protection
echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
 
# Log packets with impossible source addresses
echo 1 > /proc/sys/net/ipv4/conf/all/log_martians

# ---------------------------------------------------------
read -p "Do you want to print these new rules? (y/N): " choice
case "$choice" in 
    y|Y )
        printf "\n## IPv4 -------------------------------------------------\n"
        $iptables -nL
        printf "\n## IPv6 -------------------------------------------------\n"
        $ip6tables -nL
        printf "\n---------------------------------------------------------\n"
        ;;
esac

read -p "Do you want to make these changes pemanent? (y/N): " choice
case "$choice" in 
  y|Y )
    printf "Saving configuration..."
    source /etc/os-release
    case "$ID" in
        "arch" )
            ipsave=$(which iptables-save)
            ip6save=$(which ip6tables-save)
            $ipsave > /etc/iptables/iptables.rules
            $ip6save > /etc/iptables/ip6tables.rules
            ;;
        "centos" )
            chkconfig=$(which chkconfig)
            service=$(which service)
            $chkconfig iptables on
            $service iptables save
            $chkconfig ip6tables on
            $service ip6tables save
            ;;
        * )
            echo "ERROR: Distribuition not available for auto-save feature"
            exit 1
            ;;
    esac
    echo OK!
    ;;
esac

echo "> iptables configuration completed!"
